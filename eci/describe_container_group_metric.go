package eci

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeContainerGroupMetric invokes the eci.DescribeContainerGroupMetric API synchronously
// api document: https://help.aliyun.com/api/eci/DescribeContainerGroupMetric.html
func (client *Client) DescribeContainerGroupMetric(request *DescribeContainerGroupMetricRequest) (response *DescribeContainerGroupMetricResponse, err error) {
	response = CreateDescribeContainerGroupMetricResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeContainerGroupMetricWithChan invokes the eci.DescribeContainerGroupMetric API asynchronously
// api document: https://help.aliyun.com/api/eci/DescribeContainerGroupMetric.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeContainerGroupMetricWithChan(request *DescribeContainerGroupMetricRequest) (<-chan *DescribeContainerGroupMetricResponse, <-chan error) {
	responseChan := make(chan *DescribeContainerGroupMetricResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeContainerGroupMetric(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeContainerGroupMetricWithCallback invokes the eci.DescribeContainerGroupMetric API asynchronously
// api document: https://help.aliyun.com/api/eci/DescribeContainerGroupMetric.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeContainerGroupMetricWithCallback(request *DescribeContainerGroupMetricRequest, callback func(response *DescribeContainerGroupMetricResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeContainerGroupMetricResponse
		var err error
		defer close(result)
		response, err = client.DescribeContainerGroupMetric(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeContainerGroupMetricRequest is the request struct for api DescribeContainerGroupMetric
type DescribeContainerGroupMetricRequest struct {
	*requests.RpcRequest
	ContainerGroupId string           `position:"Query" name:"ContainerGroupId"`
	StartTime        string           `position:"Query" name:"StartTime"`
	EndTime          string           `position:"Query" name:"EndTime"`
	Period           requests.Integer `position:"Query" name:"Period"`
}

// DescribeContainerGroupMetricResponse is the response struct for api DescribeContainerGroupMetric
type DescribeContainerGroupMetricResponse struct {
	*responses.BaseResponse
	ContainerGroupId string         `json:"ContainerGroupId",xml:"ContainerGroupId"`
	RequestId        string         `json:"RequestId" xml:"RequestId"`
	Records          []MetricRecord `json:"Records",xml:"Records"`
}

// CreateDescribeContainerGroupMetricRequest creates a request to invoke DescribeContainerGroupMetric API
func CreateDescribeContainerGroupMetricRequest() (request *DescribeContainerGroupMetricRequest) {
	request = &DescribeContainerGroupMetricRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Eci", "2018-08-08", "DescribeContainerGroupMetric", "eci", "openAPI")
	return
}

// CreateDescribeContainerGroupMetricResponse creates a response to parse from DescribeContainerGroupMetric response
func CreateDescribeContainerGroupMetricResponse() (response *DescribeContainerGroupMetricResponse) {
	response = &DescribeContainerGroupMetricResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
